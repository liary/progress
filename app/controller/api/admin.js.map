{
    "version": 3,
    "sources": [
        "../../../src/controller/api/admin.js"
    ],
    "names": [
        "module",
        "exports",
        "think",
        "limama",
        "api",
        "__before",
        "loginStatus",
        "islogin",
        "loginInfo",
        "status",
        "message",
        "adduserAction",
        "newUser",
        "post",
        "model",
        "createTime",
        "parseInt",
        "Date",
        "getTime",
        "toString",
        "slice",
        "password",
        "md5",
        "res",
        "adduser",
        "success",
        "loginAction",
        "redirect",
        "user",
        "login",
        "console",
        "log",
        "isEmpty",
        "fail",
        "session",
        "name",
        "ip",
        "logoutAction"
    ],
    "mappings": ";;AAAAA,OAAOC,OAAP,GAAiB,cAAcC,MAAMC,MAAN,CAAaC,GAA3B,CAA+B;AACzCC,SAAN,GAAiB;AAAA;;AAAA;AAChB,SAAMC,cAAc,MAAM,MAAKC,OAAL,EAA1B;AACA,SAAKC,SAAL,GAAiB;AAChBC,YAAQH,WADQ;AAEhBI,aAAS;AACR,QAAG,KADK;AAER,QAAG,KAFK;AAGR,QAAG;AAHK,MAIPJ,WAJO;AAFO,IAAjB;AAFgB;AAUhB;AACKK,cAAN,GAAsB;AAAA;;AAAA;AACrB,SAAMC,UAAU,OAAKC,IAAL,EAAhB;AACA,SAAMC,QAAQ,OAAKA,KAAL,CAAW,YAAX,CAAd;AACAF,WAAQG,UAAR,GAAqBC,SAAS,IAAIC,IAAJ,GAAWC,OAAX,GAAqBC,QAArB,GAAgCC,KAAhC,CAAsC,CAAtC,EAAyC,EAAzC,CAAT,CAArB;AACAR,WAAQS,QAAR,GAAmBnB,MAAMoB,GAAN,CAAUV,QAAQS,QAAlB,CAAnB;AACA,SAAME,MAAM,MAAMT,MAAMU,OAAN,CAAcZ,OAAd,CAAlB;AACA;AACA,UAAKa,OAAL,CAAaF,GAAb;AAPqB;AAQrB;AACKG,YAAN,GAAoB;AAAA;;AAAA;AACnB,OAAI,OAAKlB,SAAL,CAAeC,MAAf,KAA0B,CAA9B,EAAiC;AAChC,WAAKkB,QAAL,CAAc,QAAd;AACA;AACD,SAAMb,QAAQ,OAAKA,KAAL,CAAW,YAAX,CAAd;AACA,SAAMN,YAAY,OAAKK,IAAL,EAAlB;AACA,SAAMe,OAAO,MAAMd,MAAMe,KAAN,CAAYrB,SAAZ,CAAnB;AACAsB,WAAQC,GAAR,CAAYH,IAAZ;AACA,OAAI1B,MAAM8B,OAAN,CAAcJ,IAAd,CAAJ,EAAyB;AACxB,WAAKK,IAAL,CAAU,cAAV;AACA,IAFD,MAEO;AACN,UAAM,OAAKC,OAAL,CAAa,UAAb,EAAyB;AAC9BN,WAAMA,KAAKO,IADmB;AAE9BC,SAAI,OAAKA,EAFqB;AAG9BP,YAAO;AAHuB,KAAzB,CAAN;AAKA,WAAKJ,OAAL,CAAa,IAAb;AACA;AAjBkB;AAkBnB;AACKY,aAAN,GAAqB;AAAA;;AAAA;AACpB,SAAM,OAAKH,OAAL,CAAa,IAAb,CAAN;AACA,UAAKT,OAAL,CAAa,IAAb;AAFoB;AAGpB;AACD;AACA;AACA;AACA;AACA;;AAEA;;;;;AAKMlB,QAAN,GAAgB;AAAA;;AAAA;AACf,SAAMqB,OAAO,MAAM,OAAKM,OAAL,CAAa,UAAb,CAAnB;AACA,OAAIX,MAAM,CAAV;AACA,OAAI,CAACrB,MAAM8B,OAAN,CAAcJ,IAAd,CAAD,IAAwBA,KAAKC,KAAjC,EAAwC;AACvCN,UAAMK,KAAKQ,EAAL,KAAY,OAAKA,EAAjB,GAAsB,CAAtB,GAA0B,CAAhC;AACA;AACD,UAAOb,GAAP;AANe;AAOf;AA9D8C,CAAhD",
    "file": "../../../src/controller/api/admin.js",
    "sourcesContent": [
        "module.exports = class extends think.limama.api {\n\tasync __before() {\n\t\tconst loginStatus = await this.islogin();\n\t\tthis.loginInfo = {\n\t\t\tstatus: loginStatus,\n\t\t\tmessage: {\n\t\t\t\t0: '未登陆',\n\t\t\t\t1: '已登陆',\n\t\t\t\t2: '账号在别处登陆'\n\t\t\t}[loginStatus]\n\t\t};\n\t}\n\tasync adduserAction() {\n\t\tconst newUser = this.post();\n\t\tconst model = this.model('admin/user');\n\t\tnewUser.createTime = parseInt(new Date().getTime().toString().slice(0, 10));\n\t\tnewUser.password = think.md5(newUser.password);\n\t\tconst res = await model.adduser(newUser);\n\t\t// model.adduser(newUser);\n\t\tthis.success(res);\n\t}\n\tasync loginAction() {\n\t\tif (this.loginInfo.status === 1) {\n\t\t\tthis.redirect('/index');\n\t\t}\n\t\tconst model = this.model('admin/user');\n\t\tconst loginInfo = this.post();\n\t\tconst user = await model.login(loginInfo);\n\t\tconsole.log(user)\n\t\tif (think.isEmpty(user)) {\n\t\t\tthis.fail('login failed');\n\t\t} else {\n\t\t\tawait this.session('userInfo', {\n\t\t\t\tuser: user.name,\n\t\t\t\tip: this.ip,\n\t\t\t\tlogin: true\n\t\t\t});\n\t\t\tthis.success(true);\n\t\t}\n\t}\n\tasync logoutAction() {\n\t\tawait this.session(null);\n\t\tthis.success(true);\n\t}\n\t// async changeInfo(field, value, psw) {\n\t// \tif (field === 'password') {\n\t// \t\treturn this.resetPassword;\n\t// \t}\n\t// }\n\t\n\t/**\n\t * 判断是否登陆\n\t * \n\t * @returns {number} 2: 账号在别处登陆 0: 未登陆 1: 已登陆\n\t */\n\tasync islogin() {\n\t\tconst user = await this.session('userInfo');\n\t\tlet res = 0;\n\t\tif (!think.isEmpty(user) && user.login) {\n\t\t\tres = user.ip === this.ip ? 1 : 2;\n\t\t}\n\t\treturn res;\n\t}\n}"
    ]
}
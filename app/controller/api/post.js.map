{
    "version": 3,
    "sources": [
        "../../../src/controller/api/post.js"
    ],
    "names": [
        "module",
        "exports",
        "think",
        "limama",
        "api",
        "__before",
        "loginStatus",
        "islogin",
        "loginInfo",
        "status",
        "message",
        "listAction",
        "s",
        "service",
        "res",
        "getList",
        "success",
        "addAction",
        "fail",
        "model",
        "post",
        "user",
        "session",
        "article",
        "Object",
        "assign",
        "_",
        "pick",
        "read",
        "createTime",
        "Date",
        "getTime",
        "toString",
        "slice",
        "author",
        "edit",
        "editAction",
        "id",
        "isEmpty",
        "login",
        "ip"
    ],
    "mappings": ";;AAAAA,OAAOC,OAAP,GAAiB,cAAcC,MAAMC,MAAN,CAAaC,GAA3B,CAA+B;AACzCC,SAAN,GAAiB;AAAA;;AAAA;AAChB,SAAMC,cAAc,MAAM,MAAKC,OAAL,EAA1B;AACA,SAAKC,SAAL,GAAiB;AAChBC,YAAQH,WADQ;AAEhBI,aAAS;AACR,QAAG,KADK;AAER,QAAG,KAFK;AAGR,QAAG;AAHK,MAIPJ,WAJO;AAFO,IAAjB;AAFgB;AAUhB;AACKK,WAAN,GAAmB;AAAA;;AAAA;AAClB;AACA;AACA,SAAMC,IAAI,OAAKC,OAAL,CAAa,UAAb,CAAV;AACA,SAAMC,MAAO,MAAMF,EAAEG,OAAF,EAAnB;AACA;AACA;AACA;AACA;AACA;AACA,UAAKC,OAAL,CAAaF,GAAb;AAVkB;AAWlB;;AAEKG,UAAN,GAAkB;AAAA;;AAAA;AACjB,OAAI,OAAKT,SAAL,CAAeC,MAAf,KAA0B,CAA9B,EAAiC;AAChC,WAAO,OAAKS,IAAL,CAAU,OAAKV,SAAL,CAAeE,OAAzB,CAAP;AACA;AACD,SAAMS,QAAQ,OAAKA,KAAL,CAAW,cAAX,CAAd;AACA,SAAMC,OAAO,OAAKA,IAAL,EAAb;AACA,SAAMC,OAAO,MAAM,OAAKC,OAAL,CAAa,UAAb,CAAnB;AACA,SAAMC,UAAUC,OAAOC,MAAP,CAAcvB,MAAMwB,CAAN,CAAQC,IAAR,CAAaP,IAAb,EAAmB,CAAC,OAAD,EAAU,SAAV,EAAqB,UAArB,CAAnB,CAAd,EAAoE;AACnFQ,UAAM,CAD6E;AAEnFC,gBAAY,IAAIC,IAAJ,GAAWC,OAAX,GAAqBC,QAArB,GAAgCC,KAAhC,CAAsC,CAAtC,EAAyC,EAAzC,KAA8C,CAFyB;AAGnFxB,YAAQ,CAH2E;AAInFyB,YAAQb,KAAKA;AAJsE,IAApE,CAAhB;AAMA,SAAMP,MAAM,MAAMK,MAAMgB,IAAN,CAAWZ,OAAX,CAAlB;AACA,UAAKP,OAAL,CAAaF,GAAb;AAdiB;AAejB;;AAEKsB,WAAN,GAAmB;AAAA;;AAAA;AAClB,OAAI,OAAK5B,SAAL,CAAeC,MAAf,KAA0B,CAA9B,EAAiC;AAChC,WAAO,OAAKS,IAAL,CAAU,OAAKV,SAAL,CAAeE,OAAzB,CAAP;AACA;AACD,SAAMS,QAAQ,OAAKA,KAAL,CAAW,cAAX,CAAd;AACA,SAAMC,OAAO,OAAKA,IAAL,EAAb;AACA,SAAMG,UAAUrB,MAAMwB,CAAN,CAAQC,IAAR,CAAaP,IAAb,EAAmB,CAAC,OAAD,EAAU,SAAV,EAAqB,UAArB,CAAnB,CAAhB;AACA,SAAMN,MAAM,MAAMK,MAAMgB,IAAN,CAAWZ,OAAX,EAAoBH,KAAKiB,EAAzB,CAAlB;AACA,UAAKrB,OAAL,CAAaF,GAAb;AARkB;AASlB;;AAED;;;;;AAKMP,QAAN,GAAgB;AAAA;;AAAA;AACf,SAAMc,OAAO,MAAM,OAAKC,OAAL,CAAa,UAAb,CAAnB;AACA,OAAIR,MAAM,CAAV;AACA,OAAI,CAACZ,MAAMoC,OAAN,CAAcjB,IAAd,CAAD,IAAwBA,KAAKkB,KAAjC,EAAwC;AACvCzB,UAAMO,KAAKmB,EAAL,KAAY,OAAKA,EAAjB,GAAsB,CAAtB,GAA0B,CAAhC;AACA;AACD,UAAO1B,GAAP;AANe;AAOf;AAjE8C,CAAhD",
    "file": "../../../src/controller/api/post.js",
    "sourcesContent": [
        "module.exports = class extends think.limama.api {\n\tasync __before() {\n\t\tconst loginStatus = await this.islogin();\n\t\tthis.loginInfo = {\n\t\t\tstatus: loginStatus,\n\t\t\tmessage: {\n\t\t\t\t0: '未登陆',\n\t\t\t\t1: '已登陆',\n\t\t\t\t2: '账号在别处登陆'\n\t\t\t}[loginStatus]\n\t\t};\n\t}\n\tasync listAction() {\n\t\t// const model = this.model('post');\n\t\t// const res = await model.getList(page);\n\t\tconst s = this.service('api/post');\n\t\tconst res =  await s.getList();\n\t\t// const res = await this.service();\n\t\t// newUser.createTime = parseInt(new Date().getTime().toString().slice(0, 10));\n\t\t// newUser.password = think.md5(newUser.password);\n\t\t// const res = await model.adduser(newUser);\n\t\t// model.adduser(newUser);\n\t\tthis.success(res);\n\t}\n\n\tasync addAction() {\n\t\tif (this.loginInfo.status !== 1) {\n\t\t\treturn this.fail(this.loginInfo.message);\n\t\t}\n\t\tconst model = this.model('content/post');\n\t\tconst post = this.post();\n\t\tconst user = await this.session('userInfo');\n\t\tconst article = Object.assign(think._.pick(post, ['title', 'content', 'category']), {\n\t\t\tread: 0,\n\t\t\tcreateTime: new Date().getTime().toString().slice(0, 10)>>0,\n\t\t\tstatus: 1,\n\t\t\tauthor: user.user\n\t\t});\n\t\tconst res = await model.edit(article);\n\t\tthis.success(res);\n\t}\n\n\tasync editAction() {\n\t\tif (this.loginInfo.status !== 1) {\n\t\t\treturn this.fail(this.loginInfo.message);\n\t\t}\n\t\tconst model = this.model('content/post');\n\t\tconst post = this.post();\n\t\tconst article = think._.pick(post, ['title', 'content', 'category']);\n\t\tconst res = await model.edit(article, post.id);\n\t\tthis.success(res);\n\t}\n\t\n\t/**\n\t * 判断是否登陆\n\t * \n\t * @returns {number} 2: 账号在别处登陆 0: 未登陆 1: 已登陆\n\t */\n\tasync islogin() {\n\t\tconst user = await this.session('userInfo');\n\t\tlet res = 0;\n\t\tif (!think.isEmpty(user) && user.login) {\n\t\t\tres = user.ip === this.ip ? 1 : 2;\n\t\t}\n\t\treturn res;\n\t}\n}"
    ]
}